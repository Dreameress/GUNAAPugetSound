// <auto-generated />
using System;
using GUNAAPugetSound.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entities.Migrations
{
    [DbContext(typeof(GUNAADbContext))]
    [Migration("20210707204652_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AcceptTerms")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordReset")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Verified")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Entities.Models.Album", b =>
                {
                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("('')")
                        .HasMaxLength(160);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(160)")
                        .HasMaxLength(160);

                    b.HasKey("AlbumId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Entities.Models.CommitteeMember", b =>
                {
                    b.Property<Guid>("CommitteeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Committee")
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("CommitteeId");

                    b.ToTable("CommitteeMembers");

                    b.HasData(
                        new
                        {
                            CommitteeId = new Guid("b6dafd21-7cfc-4d54-ab5b-52247ce67b97"),
                            Active = true,
                            Committee = 2,
                            Created = new DateTime(2021, 7, 7, 20, 46, 51, 778, DateTimeKind.Utc).AddTicks(7199),
                            FirstName = "Don",
                            LastName = "Paul"
                        },
                        new
                        {
                            CommitteeId = new Guid("16f552f0-e0f7-45a2-9680-ac5f41964ba8"),
                            Active = true,
                            Committee = 3,
                            Created = new DateTime(2021, 7, 7, 20, 46, 51, 778, DateTimeKind.Utc).AddTicks(7939),
                            FirstName = "Tammy",
                            LastName = "Richardson"
                        },
                        new
                        {
                            CommitteeId = new Guid("ceb8924c-9a60-481f-a08d-1540ff8662c6"),
                            Active = true,
                            Committee = 4,
                            Created = new DateTime(2021, 7, 7, 20, 46, 51, 778, DateTimeKind.Utc).AddTicks(7965),
                            FirstName = "Eva",
                            LastName = "Edwards"
                        },
                        new
                        {
                            CommitteeId = new Guid("865bd307-0fe3-4db7-b88c-3627b1ada2ac"),
                            Active = true,
                            Committee = 1,
                            Created = new DateTime(2021, 7, 7, 20, 46, 51, 778, DateTimeKind.Utc).AddTicks(7969),
                            FirstName = "Marcus",
                            LastName = "Dabney"
                        });
                });

            modelBuilder.Entity("Entities.Models.Content", b =>
                {
                    b.Property<Guid>("ContentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AboutUsHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUsQuoteLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUsQuoteLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUsQuoteLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUsQuoteLine4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUsSubHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendarMainHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CalendarSubHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitteesMainHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommitteesSubHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactUsAddressName1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactUsAddressName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactUsCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactUsHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactUsState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactUsStreetAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactUsSubHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactUsZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("HomeLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeLine3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeLine4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeMainHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HomeSubHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LastUpdatedUserId")
                        .HasColumnType("int");

                    b.Property<string>("MemberShipName1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberShipName2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Membership1Amount1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Membership1Amount2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Membership1Amount3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Membership2Amount1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Membership2Amount2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Membership2Amount3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MembershipMainHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MembershipSubHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficersMainHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficersSubHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoMainHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoSubHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScholarshipLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScholarshipMainHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScholarshipSubHeader")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("ContentId");

                    b.ToTable("Content");

                    b.HasData(
                        new
                        {
                            ContentId = new Guid("2ef51746-56bc-4b13-8cf9-7325767e434c"),
                            AboutUsHeader = "About Us",
                            AboutUsQuoteLine1 = "The purpose of the chapter is : (1) To maintain a working relationship with the University;",
                            AboutUsQuoteLine2 = "(2) To promote interest in the University among prospective students;",
                            AboutUsQuoteLine3 = "(3) To promote fellowship among the alumni; and",
                            AboutUsQuoteLine4 = "(4) To promote and maintain a positive image of the University in the community.",
                            AboutUsSubHeader = "Mission",
                            CalendarMainHeader = "Calendar",
                            CalendarSubHeader = "Keeping you updated with Events, Meetings, and more from GUNAA Puget Sound",
                            CommitteesMainHeader = "Committees",
                            CommitteesSubHeader = "Committee Chairs for Grambling University National Alumni Association of Puget Sound",
                            ContactUsAddressName1 = "Grambling University National Alumni Association",
                            ContactUsAddressName2 = "Puget Sound Chapter",
                            ContactUsCity = "Seattle",
                            ContactUsHeader = "Contact Us",
                            ContactUsState = "Washington",
                            ContactUsStreetAddress = "Post Office Box 18321",
                            ContactUsZipCode = "98118",
                            Created = new DateTime(2021, 7, 7, 20, 46, 51, 780, DateTimeKind.Utc).AddTicks(7650),
                            HomeLine1 = "We would like to welcome all alumni and supporters living in and visiting the Seattle area. We welcome your support as we continue our mission of recruiting students to our alma mater. ",
                            HomeLine2 = "If you are in the Puget Sound area and interested in attending Grambling State University or currently attending Grambling State University, please reach out to us for information on the scholarships we provide.",
                            HomeLine3 = "Go Tigers!!!",
                            HomeLine4 = "Grambling, Where Everybody is Somebody",
                            HomeMainHeader = "Welcome",
                            HomeSubHeader = "Welcome to the Home Site of the Puget Sound Chapter Of the Grambling University National Alumni Association",
                            LastUpdatedUserId = 0,
                            MemberShipName1 = "GUNAA",
                            MemberShipName2 = "GUNAA Puget Sound Chapter",
                            Membership1Amount1 = "National Dues (Yearly) $70",
                            Membership1Amount2 = "Life Membership (Single) $500",
                            Membership1Amount3 = "Life Membership (Couples) $750",
                            Membership2Amount1 = "Local Dues Regular Members $40",
                            Membership2Amount2 = "Local Dues Associate Members (family/friends) $35",
                            MembershipMainHeader = "Membership",
                            MembershipSubHeader = "Alumni Association Dues Structure",
                            OfficersMainHeader = "Officers",
                            OfficersSubHeader = "Leaders of Grambling University National Alumni Association of Puget Sound",
                            PhotoMainHeader = "Photos",
                            PhotoSubHeader = "Captured Moments from the GUNAA Events, Meetings, Fundraisers, and more",
                            ScholarshipMainHeader = "Scholarship",
                            ScholarshipSubHeader = "Scholarship Program"
                        });
                });

            modelBuilder.Entity("Entities.Models.Event", b =>
                {
                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Entities.Models.Member", b =>
                {
                    b.Property<Guid>("MemberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Committee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GraduationYear")
                        .HasColumnType("int");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LinkedIn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameFirst")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameLast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MemberId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Entities.Models.MigrationHistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ContextKey")
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<byte[]>("Model")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("MigrationId", "ContextKey");

                    b.ToTable("__MigrationHistory");
                });

            modelBuilder.Entity("Entities.Models.Officer", b =>
                {
                    b.Property<Guid>("OfficerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MemberId")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("OfficerId");

                    b.ToTable("Officers");

                    b.HasData(
                        new
                        {
                            OfficerId = new Guid("8b7ba2e1-ddc6-4aeb-9de6-2eb2db5922d3"),
                            Active = true,
                            Created = new DateTime(2021, 7, 7, 20, 46, 51, 776, DateTimeKind.Utc).AddTicks(3311),
                            FirstName = "Charlene",
                            LastName = "Francisco",
                            Role = 1
                        },
                        new
                        {
                            OfficerId = new Guid("3aaa06e9-b5bf-46f9-91e1-018fdbc0d407"),
                            Active = true,
                            Created = new DateTime(2021, 7, 7, 20, 46, 51, 776, DateTimeKind.Utc).AddTicks(3718),
                            FirstName = "Jeanie",
                            LastName = "Nelson",
                            Role = 3
                        },
                        new
                        {
                            OfficerId = new Guid("59db7597-7941-4b1e-8398-4a62f67eac46"),
                            Active = true,
                            Created = new DateTime(2021, 7, 7, 20, 46, 51, 776, DateTimeKind.Utc).AddTicks(3729),
                            FirstName = "Eva",
                            LastName = "Edwards",
                            Role = 4
                        },
                        new
                        {
                            OfficerId = new Guid("25ff8f70-af5a-45b1-80f3-4d705be80e2e"),
                            Active = true,
                            Created = new DateTime(2021, 7, 7, 20, 46, 51, 776, DateTimeKind.Utc).AddTicks(3732),
                            FirstName = "Beverly",
                            LastName = "Hopkins",
                            Role = 2
                        });
                });

            modelBuilder.Entity("Entities.Models.Photo", b =>
                {
                    b.Property<Guid>("PhotoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AddedBy")
                        .HasColumnType("int");

                    b.Property<Guid>("AlbumId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThumbPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PhotoId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Entities.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Entities.Models.Account", b =>
                {
                    b.OwnsMany("Entities.Models.RefreshToken", "RefreshTokens", b1 =>
                        {
                            b1.Property<int>("RefreshTokenId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("AccountId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("Created")
                                .HasColumnType("datetime2");

                            b1.Property<string>("CreatedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime>("ExpiryDate")
                                .HasColumnType("datetime2");

                            b1.Property<string>("ReplacedByToken")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTime?>("Revoked")
                                .HasColumnType("datetime2");

                            b1.Property<string>("RevokedByIp")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Token")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RefreshTokenId");

                            b1.HasIndex("AccountId");

                            b1.ToTable("RefreshToken");

                            b1.WithOwner("Account")
                                .HasForeignKey("AccountId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
